Paper Title,Study Domain Terms,Study_Area,Study_Area2
Requirements for adopting software process lines,Software Process Lines; Method Tailoring; Requirements Engineering; Systematic Mapping Study; Software Product Lines,"Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
Systematic literature reviews in software engineeringâ€”enhancement of the study selection process using Cohenâ€™s Kappa statistic,Systematic Literature Reviews; Bias Reduction; Study Selection Criteria; Software Engineering; Statistical Methods in Research,Methods and tools for empirical software engineering research,
,,,
,,,
,,,
A classification framework for automated control code generation in industrial automation,Industrial Automation; Control Logic Generation; IEC 61131-3; Automation Software; Case Study Validation,"Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
The effect of transactive memory systems on process tailoring in software projects: The moderating role of task conflict and shared temporal cognitions,Software Process Tailoring; Transactive Memory Systems; Task Conflict; Temporal Cognitions; Team Performance,Human factors and management concerns of software development,
,,,
,,,
Generating summaries for methods of event-driven programs: An Android case study,Source Code Summarization; Event-driven Programs; Deep Neural Networks; Dynamic Call Graphs; Android Development,"Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
A systematic study of reward for reinforcement learning based continuous integration testing,Reinforcement Learning; Continuous Integration Testing; Test Case Prioritization; Reward Functions; Software Testing,"Artificial Intelligence, data analytics and big data applied in software engineering","DevOps, continuous integration, build and test automation"
,,,
,,,
,,,
Integrating UX work with agile development through user stories: An action research study in a small software company,UX Integration; Agile Development; Software-as-a-Service (SaaS); User Stories; Action Research,Human factors and management concerns of software development,
,,,
,,,
TagDC: A tag recommendation method for software information sites with a combination of deep learning and collaborative filtering,Tag Recommendation Systems; Collaborative Filtering; Deep Learning; Software Information Sites; Software Object Understanding,"Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
Neural joint attention code search over structure embeddings for software Q&A sites,Code Search; Neural Networks; Semantic Similarity; Bi-modal Embeddings; Software Q&A,"Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
Secondary studies in the academic context: A systematic mapping and survey,Systematic Literature Review; Software Engineering; Secondary Studies; Research Methodology; Academic Research,Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
Black-box adversarial sample generation based on differential evolution,Deep Neural Networks (DNNs); Adversarial Attacks; Differential Evolution; Robustness Testing; Black-box Attack Techniques,"Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
Scrum versus Rational Unified Process in facing the main challenges of product configuration systems development,Product Configuration Systems; Mass Customization; Software Development; Agile Methodologies; Knowledge Management,"Agile, model-driven, service-oriented, open source and global software development",
,,,
,,,
,,,
,,,
Implementation relations and testing for cyclic systems with refusals and discrete time,Cyclic System Modeling; Reactive Systems; Formal Methods; Implementation Relations; Discrete Time Testing,"Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
Imbalanced metric learning for crashing fault residence prediction,Software Fault Localization; Crash Data Analysis; Metric Learning; Imbalanced Learning; Debugging Automation,"Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
,,,
,,,
Vendor Switching: Factors that matter when engineers onboard their own replacement,Offshore Outsourcing; Vendor Switching; Knowledge Transfer; Organizational Fit; Opportunistic Behavior,Human factors and management concerns of software development,
,,,
Understanding coordination in global software engineering: A mixed-methods study on the use of meetings and Slack,Global Software Engineering; Team Coordination; Collaboration Tools; Distributed Teams; Meetings Analysis,Human factors and management concerns of software development,
,,,
Examining the reuse potentials of IoT application frameworks,IoT Systems; Framework Reusability; Component Reuse; Device Management; Software Quality,Approaches for cloud/fog/edge computing and virtualized systems,
,,,
,,,
Some SonarQube issues have a significant but small effect on faults and changes. A large-scale empirical study,SonarQube Issues; Fault-proneness; Code Changes; Software Quality; Technical Debt,Methods and tools for empirical software engineering research,
,,,
,,,
"On the generation, structure, and semantics of grammar patterns in source code identifiers",Code Patterns; Identifier Naming; Source Code Analysis; Grammar Semantics; POS Tagging,"Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
,,,
,,,
A comparison of quality flaws and technical debt in model transformation specifications,Model Transformations; Technical Debt; Model-Driven Engineering; Software Quality; Quality Flaws Analysis,"Agile, model-driven, service-oriented, open source and global software development",
,,,
,,,
,,,
,,,
From API to NLI: A new interface for library reuse,API Learning; Library Reuse; Natural Language Interface; Code Synthesis; Software Development,"Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
Evaluating and strategizing the onboarding of software developers in large-scale globally distributed projects,Onboarding Strategies; Large-scale Projects; Distributed Teams; Mentorship in Software Engineering; Business Process Modeling,Human factors and management concerns of software development,
,,,
,,,
,,,
CODE reuse in practice: Benefiting or harming technical debt,Software Reuse; Technical Debt; Software Engineering; Case Study; OSS Systems,Business and economic aspects of software development processes,
,,,
,,,
,,,
,,,
SEET: Symbolic Execution of ETL Transformations,Model Transformations; Symbolic Execution; ETL Errors; Constraint Solvers; Eclipse Integration,"Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
The influence of Technical Debt on software developer morale,Technical Debt Management; Software Developer Productivity; Developer Morale; Time Wastage in Software Development; Software Engineering Practices,Human factors and management concerns of software development,
,,,
,,,
,,,
"Uncertainty in information system development: Causes, effects, and coping mechanisms",Information System Development; Project Management; Uncertainty; Software Industry; Coping Mechanisms,Human factors and management concerns of software development,
,,,
,,,
Achieving agility and quality in product development - an empirical study of hardware startups,Agile Development; Hardware Startups; Product Quality; Technical Debt; Evolutionary Prototyping,"Agile, model-driven, service-oriented, open source and global software development",
,,,
,,,
,,,
,,,
Integrating GitLab metrics into coursework consultation sessions in a software engineering course,Software Engineering Education; GitLab Metrics; Collaborative Coding; Student Project Assessment; Educational Software Development Tools,Software Engineering education,
,,,
,,,
,,,
,,,
,,,
,,,
Substructure similarity search for engineering service-based systems,Service-Oriented Architecture; Software Engineering; Substructure Similarity Search; Service-Based Systems; Feature-Based Method,"Agile, model-driven, service-oriented, open source and global software development",
,,,
,,,
,,,
,,,
Relation-based test case prioritization for regression testing,Regression Testing; Fault Detection; Test Case Prioritization; Dynamic Call Sequences; Bug Detection,"Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
,,,
,,,
GAP: Forecasting commit activity in git projects,Commit Forecasting; Survival Analysis; Git Activity; Open Source Software; Developer Abandonment,"Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
Systematic literature review of empirical studies on mental representations of programs,Program Comprehension; Mental Representations; Empirical Studies in Programming; Programming Languages; Psychology of Programming,Methods and tools for empirical software engineering research,
,,,
,,,
Inner source software development: Current thinking and an agenda for future research,Open Source Software; Inner Source Development; Systematic Literature Review; Management Challenges; Research Agenda,"Agile, model-driven, service-oriented, open source and global software development",
,,,
,,,
,,,
Modeling programs hierarchically with stack-augmented LSTM,Programming Language Modeling; Neural Networks; Code Completion; Program Classification; Code Summarization,"Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
Cloud reliability and efficiency improvement via failure risk based proactive actions,Cloud Computing; Reliability Engineering; Failure Prediction; Proactive Failure Mitigation; Resource Optimization,Approaches for cloud/fog/edge computing and virtualized systems,
,,,
,,,
Cost-efficient dynamic scheduling of big data applications in apache spark on cloud,Cloud Computing; Big Data Processing; Job Scheduling; Resource Optimization; Apache Spark,Approaches for cloud/fog/edge computing and virtualized systems,
,,,
,,,
,,,
An Android application risk evaluation framework based on minimum permission set identification,Android Security; App Permissions; Overprivilege Detection; Static Analysis; Collaborative Filtering,"Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
LAURA architecture: Towards a simpler way of building situation-aware and business-aware IoT applications,IoT; WSN; Business Process Management; Situation Awareness; Open-source Architecture,Approaches for cloud/fog/edge computing and virtualized systems,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
A model-driven approach for the development of native mobile applications focusing on the data layer,Mobile Application Development; Model-Driven Development; Data Layer Design; Offline Data Persistence; Cross-platform Development,"Agile, model-driven, service-oriented, open source and global software development",
,,,
,,,
,,,
A framework for pervasive computing applications based on smart objects...,"Pervasive computing, Smart Objects, End-user development, System engineering, User experience",Approaches for cloud/fog/edge computing and virtualized systems,
,,,
ThermoSim: Deep learning based framework for modeling and simulation of thermal-aware resource management for cloud computing environments,"Cloud computing, Energy consumption, Temperature, Neural networks, Resource management","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
Automated defect identification via path analysis-based features with transfer learning,"Code generation, defect identification, machine learning, transfer learning, software engineering","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
Three decades of software reference architectures: A systematic mapping study,"Software architecture, Reference architectures, Knowledge reuse, Systematic mapping, Industry-academia collaboration",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
,,,
,,,
A systematic mapping study of developer social network research,"Developer social networks, Software projects, Collaboration, Prediction systems, Community analysis",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
Exploring the intersection between software industry and Software Engineering education - A systematic mapping of Software Engineering Trends,"Software engineering, Software education, Agile development, Global software engineering, Lean software startup",Software Engineering education,
,,,
,,,
,,,
SWFC-ART: A cost-effective approach for Fixed-Size-Candidate-Set Adaptive Random Testing through small world graphs,"Adaptive random testing, Software testing, Nearest neighbor search, Small world graphs, High-dimensional input domains","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
,,,
,,,
"Error messages in relational database management systems: A comparison of effectiveness, usefulness, and user confidence","DBMS, Error messages, SQL, Usability, Effectiveness",Human factors and management concerns of software development,
,,,
,,,
A systematic mapping study on architectural smells detection,"Software architecture, Architectural smells, Detection techniques, Empirical validation, Design quality",Methods and tools for empirical software engineering research,
,,,
,,,
Machine learning based success prediction for crowdsourcing software projects,"Crowdsourcing, Machine learning, Software projects, Prediction, Natural language processing","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
Software engineering practices for scientific software development: A systematic mapping study,"Scientific software, Software engineering, Quality attributes, Mapping study, Systematic review",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
Change impact analysis: A systematic mapping study,"Change Impact Analysis, Software maintenance, Quantification methods, Metrics, Systematic literature review",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
"Can we benchmark Code Review studies? A systematic mapping study of methodology, dataset, and metric","Code Review, Software quality assurance, Methodology, Dataset, Metrics",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
The role of the project manager in agile software development projects,"Agile software development, Project management, Grounded Theory, Scrum, XP",Human factors and management concerns of software development,
,,,
,,,
Comparison of search strategies for feature location in software models,"Search-based model-driven engineering, Feature location, Software models, Search strategies, Performance analysis","Agile, model-driven, service-oriented, open source and global software development",
,,,
,,,
,,,
Donâ€™t run on fumesâ€”Parametric gas bounds for smart contracts,"Ethereum, Smart contracts, Static analysis, Gas consumption, Blockchain","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
Brain and autonomic nervous system activity measurement in software engineering: A systematic literature review,"NeuroSE, Software engineering, Literature review, Brain activity measurement, Autonomic nervous system",Human factors and management concerns of software development,
,,,
,,,
Initiatives and challenges of using gamification in software engineering: A Systematic Mapping,"Gamification, Software engineering, Systematic mapping, Engagement, Motivation",Human factors and management concerns of software development,
,,,
,,,
,,,
Do scaling agile frameworks address global software development risks? An empirical study,"Agile development, Global software development, Risk mitigation, Empirical study, Framework effectiveness","Agile, model-driven, service-oriented, open source and global software development",
,,,
,,,
,,,
Data correction and evolution analysis of the ProgrammableWeb service ecosystem,"Web service ecosystem, Evolution analysis, API, Mashups, Dynamic network models",Approaches for cloud/fog/edge computing and virtualized systems,
,,,
,,,
,,,
,,,
,,,
Learning software configuration spaces: A systematic literature review,"Software configuration, Machine learning, Performance prediction, Configuration optimization, Systematic review","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
,,,
The ratio of equivalent mutants: A key to analyzing mutation equivalence,"Mutation testing, Software testing, Equivalent mutants, Redundancy metrics, Mutation analysis","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
,,,
,,,
Automated refactoring of legacy JavaScript code to ES6 modules,"JavaScript, ES6, Refactoring, Modularity, Static analysis","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
A formal approach for the analysis of BPMN collaboration models,"BPMN, Software development, Formal verification, Model checking, Web-based tools","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
,,,
Hippo: A formal-model execution engine to control and verify critical real-time systems,"Embedded systems, Real-time systems, Formal verification, Toolchain design, Software modeling","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
Automated identification of security discussions in microservices systems: Industrial surveys and experiments,"Microservices, Security, Machine learning, Deep learning, Software development","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
,,,
,,,
,,,
How to identify class comment types? A multi-language approach for class comment classification,"Class comment classification, Software maintenance, Natural Language Processing, Text analysis, Program comprehension","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
"Architecture information communication in two OSS projects: The why, who, when, and what","Open Source Software, Architecture information, Communication, Developer mailing lists, Case study","Agile, model-driven, service-oriented, open source and global software development",
,,,
,,,
,,,
Investigating and recommending co-changed entities for JavaScript programs,"JavaScript, Machine learning, Software maintenance, Co-changed entities, Code recommendation","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
Software defect prediction based on enhanced metaheuristic feature selection optimization and a hybrid deep neural network,"Software defect prediction, Feature selection, Deep neural network, Metaheuristic optimization, Machine learning","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
Tuning configuration of Apache Spark on public clouds by combining multi-objective optimization and performance prediction model,"Cloud computing, Apache Spark, Multi-objective optimization, Performance tuning, Configuration optimization",Approaches for cloud/fog/edge computing and virtualized systems,
,,,
,,,
Model-based testing in practice: An experience report from the web applications domain,"Model-based testing, Test automation, Software testing, Empirical evidence, Industrial application","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
A sustainable-development approach for self-adaptive cyberâ€“physical systemâ€™s life cycle: A systematic mapping study,"Cyber-Physical Systems, Sustainability, System Development Life-Cycle, Self-adaptive systems, Systematic mapping study",Software Engineering for Sustainability,
,,,
,,,
,,,
ARTINALI++: Multi-dimensional Specification Mining for Complex Cyber-Physical System Security,"Cyber-Physical Systems, Security, Specification Mining, Internet of Things, Intrusion Detection Systems",Approaches for cloud/fog/edge computing and virtualized systems,
,,,
,,,
Deployment and communication patterns in microservice architectures: A systematic literature review,"Microservice architecture, Deployment approaches, Communication patterns, Systematic literature review, Software engineering","Agile, model-driven, service-oriented, open source and global software development",
,,,
,,,
,,,
Understanding the perceived relevance of capability measures: A survey of Agile Software Development practitioners,"Agile Software Development, Capability measures, Team performance, Survey, Practitioner perceptions",Human factors and management concerns of software development,
,,,
,,,
Mining guidelines for architecting robotics software,"Robotics software, Software architecture, ROS, Quality attributes, Guidelines","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
Finding security threats that matter: Two industrial case studies,"Threat analysis, Security threats, Empirical study, Agile development, DevOps","DevOps, continuous integration, build and test automation",
,,,
,,,
,,,
,,,
,,,
A study on correlations between architectural smells and design patterns,"Design patterns, Architectural smells, Software design, Empirical study, Open source software",Methods and tools for empirical software engineering research,
,,,
,,,
Android code smells: From introduction to refactoring,"Code smells, Mobile-specific code smells, Refactoring, Performance bottlenecks, Software maintenance","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
System quality and security certification in seven weeks: A multi-case study in Spanish SMEs,"System quality, Security, SMEs, Certification, Multi-case study",Business and economic aspects of software development processes,
,,,
,,,
An extensive study on smell-aware bug localization,"Bug localization, Information retrieval, Code smells, Software maintenance, Benchmarking","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
Digging into group establishment: Intervention design and evaluation,"Group formation, Self-regulation, Peer-assessment, Software engineering education, Intervention design",Software Engineering education,
,,,
Application of agile methods in traditional logistics companies and logistics startups,"Agile methods, Logistics, IT departments, Delphi Study, Agility in logistics","Agile, model-driven, service-oriented, open source and global software development",
,,,
An empirical study on the co-occurrence between refactoring actions and Self-Admitted Technical Debt removal,"Technical Debt, Refactoring, Software quality, Software maintenance, Empirical study",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
Multilayered review of safety approaches for machine learning-based systems in the days of AI,"AI safety, Machine learning, Software engineering, Systems engineering, Safety requirements",Software Engineering for AI systems,
,,,
Evaluating the effectiveness of risk containers to isolate change propagation,"Risk containers, Change propagation, Software maintenance, Design patterns, Software architecture","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
Tigris: A DSL and framework for monitoring software systems at runtime,"Software monitoring, Runtime analysis, Adaptation, Domain-specific language, Performance optimization","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
"The symptoms, causes, and repairs of bugs inside a deep learning library","Deep learning, Software bugs, Empirical study, TensorFlow, Safety-critical applications",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
A Kubernetes controller for managing the availability of elastic microservice based stateful applications,"Microservices, Kubernetes, High Availability, Cloud-native applications, Service availability",Approaches for cloud/fog/edge computing and virtualized systems,
,,,
,,,
,,,
ProDSPL: Proactive self-adaptation based on Dynamic Software Product Lines,"Dynamic Software Product Lines, Self-adaptation, Proactive approach, Configuration generation, Quality requirements",Software Engineering for AI systems,
,,,
,,,
,,,
"A systematic literature review of blockchain and smart contract development: Techniques, tools, and open challenges","Blockchain, Smart contracts, Software engineering, Systematic review, Software development",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
A family of experiments to generate graphical user interfaces from BPMN models with stereotypes,"GUI design, BPMN, UML, Stereotypes, Experimentation","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
Signal-Based Properties of Cyber-Physical Systems: Taxonomy and Logic-based Characterization,"Cyber-physical systems, Signal-based properties, Temporal logics, Taxonomy, Requirements specifications","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
A comprehensive comparative study of clustering-based unsupervised defect prediction models,"Defect prediction, Clustering, Unsupervised learning, Software engineering, Performance evaluation","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
,,,
,,,
,,,
On the impact of release policies on bug handling activity: A case study of Eclipse,"Bug handling, Software release policies, Software engineering, Continuous development, Eclipse",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
How are issue reports discussed in Gitter chat rooms?,"Open source software development, Communication, Chat systems, Gitter, Issue reports",Human factors and management concerns of software development,
,,,
,,,
Convolutional neural networks for enhanced classification mechanisms of metamodels,"Model-Driven Engineering, Metamodels, Classification, Convolutional neural networks, Supervised learning","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
An automated model-based approach to repair test suites of evolving web applications,"Automated testing, Captureâ€“Replay tools, Test repair, Web applications, DOM coverage","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
Legacy software migration based on timing contract aware real-time execution environments,"Embedded systems, Legacy code migration, Real-time systems, Timing enforcement, Binary translation","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
,,,
"A systematic literature review on Technical Debt prioritization: Strategies, processes, factors, and tools","Technical Debt, Software engineering, Prioritization strategies, Systematic literature review, Refactoring",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
Does code quality affect pull request acceptance? An empirical study,"Code quality, Pull requests, Software maintenance, Machine learning, Case study",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
Assurance and certification of cyberâ€“physical systems: The AMASS open source ecosystem,"Cyber-physical systems, Assurance, Certification, Open source tools, System modelling","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
Interdisciplinary effects of technical debt in companies with mechatronic products â€” a qualitative study,"Technical debt, Mechatronics, Digitalization, Engineering, Interdisciplinary",Human factors and management concerns of software development,
,,,
A critical review on the evaluation of automated program repair systems,"Automated program repair, Evaluation metrics, Software engineering, Bug fixing, Patch generation",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
,,,
,,,
An evolutionary approach for generating software models: The case of Kromaia in Game Software Engineering,"Model-Driven Engineering, Game Development, Software Models, Evolutionary Model Generation, Statistical Analysis","Agile, model-driven, service-oriented, open source and global software development",
,,,
,,,
,,,
Facilitating program comprehension with call graph multilevel hierarchical abstractions,"Program comprehension, Call graph, Hierarchical abstractions, Software maintenance, Clustering","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
Product metrics for spreadsheetsâ€”A systematic review,"Software metrics, Spreadsheets, Product metrics, Literature review, Development processes",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
"Accessibility in the mobile development industry in Brazil: Awareness, knowledge, adoption, motivations and barriers",Mobile Accessibility; Assistive Technologies; Accessibility Guidelines; Software Development Barriers; Digital Accessibility Awareness,Human factors and management concerns of software development,
,,,
,,,
,,,
Concept drift-aware temporal cloud service APIs recommendation for building composite cloud systems,Cloud Service APIs; Concept Drift; Composite Cloud Systems; Temporal Recommendation Systems; Singular Value Decomposition (SVD),Approaches for cloud/fog/edge computing and virtualized systems,
,,,
,,,
Product-line assurance cases from contract-based design,Assurance Cases; Product Lines; Cyber-Physical Systems; Safety and Security; Contract-based Design,"Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
GEML: A grammar-based evolutionary machine learning approach for design-pattern detection,"Software engineering, machine learning, evolutionary algorithms, design patterns, context-free grammar","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
Code smell detection by deep direct-learning and transfer-learning,"Code smell, deep learning, transfer learning, machine learning, autoencoder","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
How to kill them all: An exploratory study on the impact of code observability on mutation testing,"Mutation testing, test quality, software engineering, refactoring, testability","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
Requirements engineering challenges and practices in large-scale agile system development,"Agile methods, Requirements engineering, Large-scale systems, SAFeÂ®, LeSS",Human factors and management concerns of software development,
,,,
,,,
,,,
,,,
Accessibility and Software Engineering Processes: A Systematic Literature Review,"Software development, Accessibility, Design, Testing, Process establishment",Human factors and management concerns of software development,
,,,
,,,
Mining Architecture Tactics and Quality Attributes knowledge in Stack Overflow,"Architecture tactics, Quality attributes, Mining, Stack Overflow, Software design",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
Synthesizing researches on Knowledge Management and Agile Software Development using the Meta-ethnography method,"Knowledge Management, Agile Software Development, Meta-ethnography, Scrum, XP",Human factors and management concerns of software development,
,,,
,,,
,,,
,,,
,,,
A qualitative analysis of themes in instant messaging communication of software developers,"software engineering, instant messaging, thematic analysis, communication, chat rooms",Human factors and management concerns of software development,
,,,
,,,
A sampling-based online Co-Location-Resistant Virtual Machine placement strategy,"VM placement, security, cloud IaaS, optimization, sampling",Approaches for cloud/fog/edge computing and virtualized systems,
,,,
,,,
A software reliability growth model for imperfect debugging,"Software reliability, debugging, error fluctuation, testing, optimization","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
A survey of software architectural change detection and categorization techniques,"software architecture, change detection, design decisions, classification, empirical data",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
A systematic literature review on benchmarks for evaluating debugging approaches,"debugging, benchmarks, fault localization, automated repair, software engineering",Methods and tools for empirical software engineering research,
,,,
A user survey on the adoption of crowd-based software engineering instructional screencasts by the new generation of software developers,"software engineering, instructional screencasts, user survey, crowd-based documentation, how-to tutorial",Software Engineering education,
,,,
,,,
Adopting threat modelling in agile software development projects,"Secure software engineering, Agile teams, Threat modelling, STRIDE, Microsoft Threat Modelling Tool",Human factors and management concerns of software development,
,,,
,,,
,,,
Agile methods used by traditional logistics companies and logistics start-ups: a systematic literature review,"Agile methods, Logistics, Start-ups, Systematic review, Innovation","Agile, model-driven, service-oriented, open source and global software development",
,,,
An architecture for mission coordination of heterogeneous robots,"Robotics, Coordination, Modifiability, Integration, Autonomy",Approaches for cloud/fog/edge computing and virtualized systems,
,,,
,,,
,,,
,,,
,,,
An automated extract method refactoring approach to correct the long method code smell,"Code smells, Refactoring, Long method, Java, Graph analysis","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
An empirical characterization of software bugs in open-source Cyberâ€“Physical Systems,"CPS, drones, automotive, robotics, Arduino, hardware",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
An empirical comparison of four Java-based regression test selection techniques,"Regression testing, Test case selection, Safety violations, Precision violations, Fault detection",Methods and tools for empirical software engineering research,
,,,
,,,
Assessing the linguistic quality of REST APIs for IoT applications,"IoT, REST APIs, Linguistic Quality, Syntactic Analysis, Semantic Analysis",Approaches for cloud/fog/edge computing and virtualized systems,
,,,
,,,
,,,
Automatically recognizing the semantic elements from UML class diagram images,"software engineering, design models, image processing, UML class diagrams, semantic elements","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
Changes in perceived productivity of software engineers during COVID-19 pandemic: The voice of evidence,"COVID-19, productivity, telework, remote work, longitudinal analysis",Human factors and management concerns of software development,
,,,
,,,
,,,
,,,
,,,
CIT-daily: A combinatorial interaction testing-based daily build process,"CIT, build processes, fault detection, configurable systems, t-way coverage","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
,,,
Classifying crowdsourced mobile test reports with image features: An empirical study,"Crowdsourced testing, Mobile testing, Image features, Test report classification, Machine learning","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
,,,
,,,
Conformance assessment of Architectural Design Decisions on API endpoint designs derived from domain modelsâœ©,"Microservices, API design, DDD, conformance, automation","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
Data management for production quality deep learning models: Challenges and solutions,"Deep learning, Data management, Industrial deployment, Case study, Software systems","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
Deep learning application on code clone detection: A review of current knowledge,"Code quality, code clone detection, bad smells, deep learning, maintainability","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
Developersâ€™ need for the rationale of code commits: An in-breadth and in-depth study,"Software Engineering, Code Commits, Rationale, Documentation, Mixed Methods",Human factors and management concerns of software development,
,,,
,,,
Emotimonitor: A Trello power-up to capture and monitor emotions of Agile teamsâœ©,"Agile, Trello, Emotional monitoring, Teams, Visualization",Human factors and management concerns of software development,
,,,
,,,
,,,
,,,
,,,
,,,
Estimating the potential of program repair search spaces with commit analysis,"Program repair, commit analysis, GitHub, repair strategy, static analysis","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
Exploiting gated graph neural network for detecting and explaining self-admitted technical debts,"SATD, Gated Graph Neural Network, Technical Debt, Software Maintenance, Hybrid Attention-Based","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
,,,
Exploring factors and metrics to select open source software components for integration: An empirical study,"Open Source Software, OSS selection, Metrics, APIs, GitHub",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
Exploring multi-programming-language commits and their impacts on software quality: An empirical study on Apache projects,"Multi-programming, Software quality, Apache projects, Development difficulty, Software bug-proneness",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
,,,
Factors affecting Agile adoption: An industry research study of the mobile app sector in Saudi Arabia,"Agile, adoption, software, human factors, SMEs",Human factors and management concerns of software development,
,,,
"GitHub repositories with links to academic papers: Public access, traceability, and evolutionâœ©","Traceability, GitHub, academic papers, access, evolution",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
,,,
,,,
GT-SimNet: Improving code automatic summarization via multi-modal similarity networks,"code summarization, multi-modal similarity, semantic modelling, API dependency graph, feature fusion","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
,,,
Hierarchical semantic-aware neural code representationâœ©,"Code representation, Program comprehension, Tree-LSTM, Semantic graph, DFS-based method","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
How has design thinking being used and integrated into software development activities? A systematic mapping,"Design Thinking, Software Development, Systematic Mapping, Models, Techniques",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
How secondary school girls perceive Computational Thinking practices through collaborative programming with the micro,"Computational Thinking, Collaborative Programming, Micro
, Mixed-methods, Secondary School Education",Software Engineering education,
,,,
,,,
,,,
,,,
,,,
Identification and measurement of Requirements Technical Debt in software development: A systematic literature review,"Requirements Technical Debt, Systematic Literature Review, Software Evolution, Metrics, Requirements Engineering",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
Just-in-time software vulnerability detection: Are we there yet?,"Software vulnerabilities, Machine learning, Source code, Vulnerability detection, Ensemble algorithms","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
Modelling and executing IoT-enhanced business processes through BPMN and microservices,"IoT, BPMN, Microservices, Process Automation, Ontologies",Approaches for cloud/fog/edge computing and virtualized systems,
,,,
,,,
Moderator factors of software security and performance verificationâœ©,"Security, performance, verification, methodology, review","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution",
,,,
,,,
Multi-paradigm modeling for cyberâ€“physical systems: A systematic mapping review,"Cyberâ€“Physical Systems, Multi-Paradigm Modeling, Cross-Domain Expertise, Heterogeneous Systems, Model Integration",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
Mutation-based analysis of queueing network performance models,"Performance, Software Engineering, System Performance, Mutation Operators, Queueing Networks","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
Mutation testing of PL/SQL programsâœ©,"Mutation testing, PL/SQL, mutant generation, automation, industrial case study","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
On the benefits and problems related to using Definition of Doneâ€”A survey studyâœ©,"Scrum, Agile, Definition of Done, Survey, Empirical study",Human factors and management concerns of software development,
,,,
,,,
,,,
On the evaluation of usability design guidelines for improving network monitoring tools interfaces,"Usability, Network Monitoring, Human-Computer Interaction, User Interface Design, Software Development",Human factors and management concerns of software development,
,,,
,,,
,,,
On the use of artificial intelligence to deal with privacy in IoT systems: A systematic literature review,"IoT, AI, Privacy, Malware Detection, Network Analysis","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
Preventing accessibility barriers: Guidelines for using user interface design patterns in mobile applications,"Accessibility, UI Design, Mobile Apps, Guidelines, Prototyping",Human factors and management concerns of software development,
,,,
,,,
,,,
,,,
Profiling gas consumption in Solidity smart contracts,"Blockchain, Smart Contracts, Gas, Solidity, Ethereum","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
Quality measurement in agile and rapid software development: A systematic mapping,"Quality measurement, Agile development, QR management, Bibliometrics, Software quality",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
Quantitative verification with adaptive uncertainty reduction,"stochastic models, epistemic uncertainty, Markov chains, unit testing, quantitative verification","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
Random or heuristic? An empirical study on path search strategies for test generation in KLEE,"Path search, test generation, random strategy, heuristic strategy, optimization","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
,,,
Revealing the state of the art of large-scale agile development research: A systematic mapping study,"Agile methods, Systematic review, Research themes, Classification framework, Software development",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
,,,
Self-adaptive mobile web service discovery framework for Dynamic Mobile Environment,"Mobile web service, Dynamic mobile environment, Context-based discovery, Service categorization, Meta-context ontology",Approaches for cloud/fog/edge computing and virtualized systems,
,,,
,,,
SEXTAMT: A systematic map to navigate the wide seas of factors affecting expert judgment software estimates,"software estimation, expert judgment, factors, systematic mapping, software projects",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
Sharing runtime permission issues for developers based on similar-app review mining,"Android permissions, Runtime issues, Sentiment analysis, Deep learning, Developer tools","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
,,,
,,,
Spreadsheet debugging: The perils of tool over-reliance,"spreadsheets, debugging, heuristic, fault identification, tool reliance",Human factors and management concerns of software development,
,,,
,,,
,,,
Systematic literature review of domain-oriented specification techniques,"Domain-specific languages, System specification, Cognitive concepts, Model integration, Domain models",Methods and tools for empirical software engineering research,
,,,
Taxonomy of security weaknesses in Java and Kotlin Android apps,"Security, Mobile apps, Android, Java, Kotlin",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
,,,
,,,
Technical debts and faults in open-source quantum software systems: An empirical study,"Quantum computing, software maintenance, technical debt, fault occurrence, code design",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
The state of research on software engineering competencies: A systematic mapping study,"Software engineering, Competencies, Agile, DevOps, Systematic review",Software Engineering education,
,,,
,,,
Towards a logical framework for ideal MBSE tool selection based on discipline specific requirements,"Model-Based Systems Engineering, Product Development, Market Research, Quality Function Deployment, Decision Matrix","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
,,,
,,,
,,,
Transformation-based model checking temporal trust in multi-agent systems,"Multi-Agent Systems, Model Checking, Temporal Logic, Trust Frameworks, Formal Methods","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
Usability inspection: Novice crowd inspectors versus expertâœ©,"Usability, Crowdsourcing, Heuristic Evaluation, Experiment Design, Cost-effectiveness",Human factors and management concerns of software development,
,,,
,,,
Using deep temporal convolutional networks to just-in-time forecast technical debt principal,"Technical debt, software maintenance, deep learning, source code, process metrics","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
Visualization of aggregated information to support class-level software evolution,"Software Evolution, Source Code Changes, Visualization, GitHub, Jira","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
VulSlicer: Vulnerability detection through code slicing,"Vulnerability detection, code slicing, open-source projects, vulnerability-relevant statements, program analysis","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
Wayback Machine: A tool to capture the evolutionary behavior of the bug reports and their triage process in open-source software systems,"Bug tracking systems, Triage process, Evolutionary metrics, Developer loads, Open-source projects",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
What factors affect the UX in mobile apps? A systematic mapping study on the analysis of app store reviews,"User Experience, Mobile Apps, App Store Reviews, Sentiment Analysis, Systematic Mapping Study",Human factors and management concerns of software development,
,,,
,,,
,,,
,,,
Identifying refactoring opportunities for large packages by analyzing maintainability characteristics in Java OSS,"Maintainability, refactoring, Java, cohesion, complexity","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
Studying the association between Gitcoinâ€™s issues and resolving outcomes,"Open-source software, Bug bounty platforms, Statistical analysis, Machine learning, Issue resolution",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
Continuous verification with acknowledged MAPE-K pattern and time logic-based slicing: A platooning system of systems case study,"SoS, platooning, control loop, resilience, verification","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
Enhancing Ethereum smart-contracts static analysis by computing a precise Control-Flow Graph of Ethereum bytecode,"Ethereum, Smart contracts, Static analysis, Control-Flow Graph, Blockchain","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
,,,
VsusFL: Variable-suspiciousness-based Fault Localization for novice programs,"programming, fault localization, novice programs, debugging, empirical studies",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
,,,
,,,
Behaviour driven development: A systematic mapping study,"software, research, BDD, development, engineering",Methods and tools for empirical software engineering research,
,,,
Empathy models and software engineering â€” A preliminary analysis and taxonomy,"software engineering, empathy, psychology, sociology, healthcare",Human factors and management concerns of software development,
,,,
,,,
,,,
Boosting multi-objective just-in-time software defect prediction by fusing expert metrics and semantic metrics,"software, prediction, code, metrics, learning","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
TitleGen-FL: Quality prediction-based filter for automated issue title generation,"Automated issue title generation, Quality prediction, Software engineering, Deep learning, Information retrieval","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
,,,
,,,
,,,
ExploitGen: Template-augmented exploit code generation based on CodeBERT,"code generation, vulnerabilities, code, security, evaluation","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
,,,
Software engineering research on the Robot Operating System: A systematic mapping study,"robotics, software engineering, research, industry, evaluation",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
Open tracing tools: Overview and critical comparison,"software, tracing, tools, architecture, engineers","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
"A critical comparison on six static analysis tools: Detection, agreement, and precision","Static Analysis Tools, Software Engineering, Quality Assurance, Technical Debt, Java Projects","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
"Test flakinessâ€™ causes, detection, impact and responses: A multivocal review","Software Testing, Software Development, Software Quality, Software Engineering, Computer Science",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
Transitioning a project-based course between onsite and online. An experience report,"Software engineering, Online learning, Project-based courses, Education, Qualitative research",Software Engineering education,
,,,
,,,
Catalog and detection techniques of microservice anti-patterns and bad smells: A tertiary study,"microservices, anti-patterns, detection, architecture, quality",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
Automatic prediction of developersâ€™ resolutions for software merge conflicts,"software, machine learning, developers, conflicts, prediction","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
Investigating the role of Product Owner in Scrum teams: Differentiation between organisational and individual impacts and opportunities,"agile, software, Product Owner, organisational, stakeholders",Human factors and management concerns of software development,
,,,
,,,
,,,
,,,
The impact of unequal contributions in student software engineering team projects,"software engineering, education, teamwork, contribution, performance",Software Engineering education,
,,,
,,,
,,,
,,,
Pragmatic evidence of cross-language link detection: A systematic literature review,"software, engineering, applications, multilingual, analysis",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
,,,
CharM â€” Evaluating a model for characterizing service-based architectures,"service, architecture, microservice, software, model","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
Comparing software product lines and Clone and Own for game software engineering under two paradigms: Model-driven development and code-driven development,"Software engineering, Game development, Code reuse, Empirical evaluation, Model-driven development","Agile, model-driven, service-oriented, open source and global software development",
,,,
,,,
,,,
,,,
,,,
Human factors in developing automated vehicles: A requirements engineering perspective,"automated vehicles, engineering, human factors, agile development, requirements engineering",Human factors and management concerns of software development,
,,,
,,,
On the impact of single and co-occurrent refactorings on quality attributes in android applications,"Software refactoring, Android applications, Software quality, Empirical study, Quality metrics",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
,,,
An effective fault localization approach based on PageRank and mutation analysis,"mutation testing, PageRank, fault localization, software testing, experimental results","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
An empirical study on real bug fixes from solidity smart contract projects,"blockchain, security, smart contracts, bug fixes, Solidity",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
,,,
A catalogue of game-specific anti-patterns based on GitHub and Game Development Stack Exchange,"Game Development, Anti-patterns, Software Engineering, Code Quality, Open-Source",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
Automatic software vulnerability assessment by extracting vulnerability elements,"Software security, Vulnerability assessment, BERT, Automated assessment, Machine learning","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
,,,
,,,
Semantic feature learning for software defect prediction from source code and external knowledge,"software, defect, prediction, machine learning, model","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
ARist: An effective API argument recommendation approach,"API, Recommendation, Software, Programming, Evaluation","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
,,,
,,,
On the roles of software testers: An exploratory study,"software testing, thematic analysis, skill acquisition, software development, job ads",Human factors and management concerns of software development,
,,,
,,,
Dialog summarization for software collaborative platform via tuning pre-trained models,"Summarization, Transformer, Pre-trained models, Few-shot learning, Software maintenance","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
,,,
,,,
On the maintenance support for microservice-based systems through the specification and the detection of microservice antipatterns,"microservices, software, systems, architectures, antipatterns",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
,,,
Application of metamorphic testing on UAV path planning software," Software test, Path planning, Oracle problem, Metamorphic testing","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
Transforming Numerical Feature Models into Propositional Formulas and the Universal Variability Language,"software product lines, numeric attributes, boolean constraints, #SAT, Binary Decision Tree","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
BPEL process defects prediction using multi-objective evolutionary search,"web services, BPEL, software, defects, programming",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
Adaptive robustness evaluation for complex system prognostics and health management software platform,"complex systems, reliability, software platforms, genetic algorithms, random forest","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
"Characteristics, causes, and consequences of technical debt in the automation domain","Technical debt, Automation, Software development, Interdisciplinary collaboration, Causal chains",Human factors and management concerns of software development,
,,,
,,,
,,,
An Investigation of Confusing Code Patterns in JavaScript,"software, JavaScript, programming, research, cognitive",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
CausalRCA: Causal inference based precise fine-grained root cause localization for microservice applications,"microservices, performance, cloud, root cause, localization","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
Predicting resource consumption of Kubernetes container systems using resource models,"cloud computing, Kubernetes, microservices, service management, orchestration",Approaches for cloud/fog/edge computing and virtualized systems,
,,,
,,,
,,,
,,,
,,,
A comprehensive evaluation of SZZ Variants through a developer-informed oracle,"Empirical Studies, Software Engineering, Bug Inducing Changes, Natural Language Processing (NLP), SZZ Algorithm",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
,,,
,,,
A decade of code comment quality assessment: A systematic literature review,"Software Engineering, Code Quality, Literature Review, Software Maintenance, Program Comprehension",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
,,,
A first look at bug report templates on GitHub,"bug report templates, GitHub, empirical study, software engineering, template mechanism",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
GitHub Copilot AI pair programmer: Asset or Liability?,"AI Programming, Software Engineering, Deep Learning, Code Synthesis, Empirical Study","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
,,,
Reliability in software engineering qualitative research through Inter-Coder Agreement,"Empirical Software Engineering, Qualitative Research, Data Analysis, Inter-Coder Agreement, DevOps Culture",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
Software runtime monitoring with adaptive sampling rate to collect representative samples of execution traces,"Software Monitoring, Runtime Analysis, Adaptive Sampling, Performance Evaluation, Data Collection","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
An empirical study of software architecture resilience evaluation methods,"Software Architecture, Resilience Evaluation, Empirical Study, Security, Method Comparison",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
A systematic literature review on the impact of formatting elements on code legibility,"Code Legibility, Formatting Elements, Literature Review, Software Engineering",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
ProCon: An automated process-centric quality constraints checking framework,"Quality Assurance, Software Engineering, Safety-Critical Systems","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
,,,
,,,
Optimal dynamic partial order reduction with context-sensitive independence and observers,"Model Checking, Algorithms, Software Engineering","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
A taxonomy of assets for the development of software-intensive products and services,"Software Engineering, Asset Management",Human factors and management concerns of software development,
,,,
,,,
,,,
,,,
,,,
Simple stupid insecure practices and GitHubâ€™s code search: A looming threat?,"Software Security, Open Source",Human factors and management concerns of software development,
,,,
,,,
,,,
,,,
CM-CASL: Comparison-based performance modeling of software systems via collaborative active and semisupervised learning,"Software Engineering, Data Science","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
,,,
An evidence-based roadmap for IoT software systems engineering,"IoT, Software Engineering",Approaches for cloud/fog/edge computing and virtualized systems,
,,,
,,,
A symbolic algorithm for the case-split rule in solving word constraints with extensions,Computer Science,"Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
Automatic modelling and verification of Autosar architectures,"Software Engineering, Computer Science","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
,,,
,,,
Graph collaborative filtering-based bug triaging,"Software Engineering, AI","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
,,,
MSTIL: Multi-cue Shape-aware Transferable Imbalance Learning for effective graphic API recommendation,"Software Engineering, AI","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
On measuring coupling between microservices,Software Engineering,"Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
Analyzing the impact of API changes on Android apps,"Software Engineering, Android",Methods and tools for empirical software engineering research,
,,,
,,,
Decentralized decision-making and scaled autonomy at Spotify,"Software Engineering, Autonomy",Human factors and management concerns of software development,
,,,
,,,
,,,
,,,
,,,
"A literature review of IoT and CPSâ€”What they are, and what they are not","IoT, Cyber-Physical Systems",Approaches for cloud/fog/edge computing and virtualized systems,
,,,
,,,
,,,
,,,
,,,
Distributed state model inference for scriptless GUI testing,Software Testing,"Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
Investigating end-usersâ€™ values in agriculture mobile applications development: An empirical study on Bangladeshi female farmers,Software Engineering,Human factors and management concerns of software development,
,,,
,,,
,,,
,,,
,,,
,,,
Can gamification help in software testing education? Findings from an empirical study,Software Engineering,Software Engineering education,
,,,
,,,
,,,
,,,
,,,
Towards a cognitive engineering of transactional services in IoT based systems,"Cognitive Computing, IoT",Approaches for cloud/fog/edge computing and virtualized systems,
,,,
An estimation of distribution algorithm based on interactions between requirements to solve the bi-objective Next Release Problem,"Software Engineering, Requirements Engineering","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
Trustworthiness models to categorize and prioritize code for security improvement,"Software Security, Trustworthiness Models, Machine Learning, Code Analysis, Software Metrics","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
Collaborative Model-Driven Software Engineering â€” A systematic survey of practices and needs in industry,"Model-Driven Software Engineering, Collaborative Software Engineering, Industry Practices, Software Development, Stakeholder Collaboration",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
Web API evolution patterns: A usage-driven approach,"Software Engineering, Computer Science","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
The pipeline for the continuous development of artificial intelligence modelsâ€”Current state of research and practice,"Artificial Intelligence, Machine Learning, DevOps, Continuous Integration, MLOps","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
Timed pattern-based analysis of collaboration failures in system-of-systems,"System of Systems, Collaboration Failures, Pattern Mining","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
Does Deep Learning improve the performance of duplicate bug report detection? An empirical study,"Bug Detection, Deep Learning, Information Retrieval","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
The uphill journey of FaaS in the open-source community,"Cloud Computing, Software Engineering",Approaches for cloud/fog/edge computing and virtualized systems,
,,,
Colla-Config: A stakeholders preferences-based approach for product lines collaborative configuration,"Software Engineering, Collaborative Software Systems","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
A modular metamodel and refactoring rules to achieve software product line interoperability,"Software Product Lines, Software Engineering","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
A systematic literature review on blockchain governance,"Blockchain, Software Engineering, Governance",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
Configuring mission-specific behavior in a product line of collaborating Small Unmanned Aerial Systems,"Software Engineering, Unmanned Aerial Systems","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
Towards automated Android app internationalisation: An exploratory study,"Software Engineering, Mobile Applications","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
,,,
,,,
,,,
Automated data validation: An industrial experience report,"Software Engineering, Data Science","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
,,,
The role of knowledge-based resources in Agile Software Development contexts,"Software Engineering, Agile Development",Human factors and management concerns of software development,
,,,
,,,
,,,
An empirical study of security practices for microservices systems,"Software Engineering, Cybersecurity",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
,,,
Efficient transformer with code token learner for code clone detection,Software Engineering,"Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
Software practitionersâ€™ point of view on technical debt payment,Software Engineering,Human factors and management concerns of software development,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
End-usersâ€™ knowledge and perception about security of clinical mobile health apps: A case study with two Saudi Arabian mHealth providers,"Cybersecurity, Health Informatics",Human factors and management concerns of software development,
,,,
,,,
,,,
Privacy explanations â€“ A means to end-user trust,"Privacy, Software Engineering",Human factors and management concerns of software development,
,,,
,,,
,,,
Automatic creation of acceptance tests by extracting conditionals from requirements: NLP approach and case study,"Software Engineering, NLP","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
Explaining quality attribute tradeoffs in automated planning for self-adaptive systems,"Software Engineering, AI",Software Engineering for AI systems,
,,,
,,,
,,,
The perspective of Brazilian software developers on data privacy,"Software Engineering, Data Privacy",Ethical/societal aspects of Software Engineering,
,,,
,,,
,,,
,,,
,,,
,,,
Applying Inter-Rater Reliability and Agreement in collaborative Grounded Theory studies in software engineering,"Qualitative Research, Software Engineering",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
Revisiting the practices and pains of microservice architecture in reality: An industrial inquiry,"Software Architecture, Microservices","Agile, model-driven, service-oriented, open source and global software development",
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
AMon: A domain-specific language and framework for adaptive monitoring of Cyberâ€“Physical Systems,"Cyber-Physical Systems, Software Engineering",Approaches for cloud/fog/edge computing and virtualized systems,
,,,
,,,
,,,
From forced Working-From-Home to voluntary working-from-anywhere: Two revolutions in telework,"Telework, Software Engineering",Human factors and management concerns of software development,
,,,
,,,
,,,
How are websites used during development and what are the implications for the coding process?,"Websites, Coding, Software quality, Code reuse, Programmer behavior",Human factors and management concerns of software development,
,,,
,,,
,,,
Explaining software fault predictions to spreadsheet users,"software fault prediction, machine learning, spreadsheets, explanations, debugging tools","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
A systematic review on security and safety of self-adaptive systems,"Cyberâ€“physical systems, self-adaptive systems, security, safety, modeling",Software Engineering for AI systems,
,,,
,,,
,,,
,,,
,,,
,,,
A-B Testing: A Systematic Literature Review,A/B Testing; Online Controlled Experiments; Experimentation Frameworks; Data-Driven Decision Making; Hypothesis Testing,Methods and tools for empirical software engineering research,
,,,
,,,
,,,
ACCESS: Assurance Case Centric Engineering of Safetyâ€“critical Systems,Safetyâ€“critical systems; Assurance cases; Formal methods; Robotics; Autonomous Systems,"Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
A conceptual and architectural characterization of antifragile systems,"Information and Communications Technology, Antifragility, Dependability, System Design, Trustworthy Systems","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
Actionable light-weight process guidance,"Software Engineering, QA, Process Guidance, Safety-Critical, Open Source","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
,,,
A data-driven active learning approach to reusing ML solutions in scientific applications,Machine learning reuse; Active learning; Scientific applications; Data-driven methods; Image segmentation,"Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
Addressing combinatorial experiments and scarcity of subjects by provably orthogonal and crossover experimental designs,"Software engineering, Security, DoE, Orthogonal designs, Crossover designs",Methods and tools for empirical software engineering research,
,,,
,,,
A framework for the design of fault-tolerant systems-of-systems,"Fault Tolerance, Systems-of-Systems, Reconfiguration, Behavioral Changes, Mission-Critical Systems","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
,,,
A fuzzy logic-based quality model for identifying microservices with low maintainability,"Microservice architecture, maintainability, scalability, fuzzy logic, ISO/IEC 250xy SQuaRE","Agile, model-driven, service-oriented, open source and global software development",
,,,
A language-parametric test coverage framework for executable domain-specific languages,"Test coverage, xDSL, Fault localization, Model element, Branch coverage","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
,,,
"A Multi-vocal Literature Review on challenges and critical success factors of phishing education, training and awareness","Phishing, Cybersecurity, User Education, Anti-phishing Tools, Human-centric Systems",Human factors and management concerns of software development,
,,,
,,,
,,,
,,,
An architecture for model-based and intelligent automation in DevOps,"DevOps, AI, Machine Learning, Model Driven Engineering, Automation","DevOps, continuous integration, build and test automation",
,,,
,,,
,,,
,,,
An empirical assessment of different word embedding and deep learning models for bug assignment,"Bug triage, text classification, deep learning, word embedding, bug assignment","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
,,,
An Empirical Investigation Into the Influence of Software Communitiesâ€™ Cultural and Geographical Dispersion on Productivity,"productivity, cultural diversity, geographical dispersion, software analytics, open-source",Human factors and management concerns of software development,
,,,
,,,
,,,
,,,
,,,
,,,
An empirical investigation on the competences and roles of practitioners in Microservices-based Architectures,"Web Technologies, DevOps, Data Technologies, Software Engineering, Technical Knowledge",Human factors and management concerns of software development,
,,,
,,,
An empirical study on bug severity estimation using source code metrics and static analysis,"Software defects, Bug prediction, Severity estimation, Static analysis, Source code metrics",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
Ant-colony optimization for automating test model generation in model transformation testing,"test model generation, metamodels, MT testing, Ant-Colony Optimization, black-box testing","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
Applying short text topic models to instant messaging communication of software developers,"Instant messaging, topic models, chat messages, developer communication, topic quality",Human factors and management concerns of software development,
,,,
,,,
Architectural support for software performance in continuous software engineering: A systematic mapping study,"Software performance, Continuous engineering, Systematic mapping, Architectural support, Performance assessment","DevOps, continuous integration, build and test automation",
,,,
,,,
,,,
,,,
,,,
Assessing gender bias in the software used in computer science and software engineering education,"CS, SE, Gender Bias, Education, Usability",Software Engineering education,
,,,
,,,
A study on classifying Stack Overflow questions based on difficulty by utilizing contextual features,"Question classification, Stack Overflow, Contextual features, TF-IDF, Doc2Vec","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
,,,
A survey on machine learning techniques applied to source code,"Machine learning, source code analysis, software engineering, vulnerability detection, testing","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
,,,
,,,
Automated program repair for variability bugs in software product line systems,"SPL, Bug fixing, Fault localization, Heuristic rules, Source code repair","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
Automatic testing of runtime enforcers with Test4Enforcers,"Health, productivity, entertainment, business, software enforcers","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
Automating the correctness assessment of AI-generated code for security contexts,"AI, Code Generation, Security, Symbolic Execution, Assembly Code","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
A vulnerability severity prediction method based on bimodal data and multi-task learning,"Software security, Vulnerability analysis, Bimodal data, Multi-task learning, Severity prediction","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
Barriers to device longevity and reuse: A vintage device empirical study,"app installation, functionality, vintage devices, Apple, reuse",Human factors and management concerns of software development,
,,,
Beyond code: Is there a difference between comments in visual and textual languages?,"Code comments, Taxonomy, Simulink, MATLAB, Model-driven engineering","Agile, model-driven, service-oriented, open source and global software development",
,,,
,,,
,,,
Bug priority change: An empirical study on Apache projects,"Bug priority, issue tracking systems, priority changes, empirical study, Apache open source",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
,,,
Code-centric learning-based just-in-time vulnerability detection,"Vulnerability, commits, graph neural network, JIT-VD, code changes","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
,,,
ConflictBench: A benchmark to evaluate software merge tools,"collaborative software development, merge tools, conflict detection, open-source Java projects, software metrics","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
Context-aware code generation with synchronous bidirectional decoder,"code generation, sequence-to-tree models, bidirectional decoder, scheduled sampling, beam search","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
Conversation in forums: How software forum posts discuss potential development insights,"Software forums, User feedback, Bug reports, Feature requests, Contextual information",Human factors and management concerns of software development,
,,,
,,,
,,,
,,,
"Data pipeline quality: Influencing factors, root causes of data-related issues, and processing problem areas for developers","Data, infrastructure, life cycle management, development & deployment, processing","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
DeepCover: Advancing RNN test coverage and online error prediction using state machine extraction,"Neural Networks, Explainability, Machine Learning, Error Prediction, Test Coverage","Artificial Intelligence, data analytics and big data applied in software engineering","Methods and tools for software verification and validation, testing, maintenance, and evolution"
,,,
Delivering computing module for the large part-time software development class from pre- to post-pandemic: An online learning experience,"online learning, higher education, software engineering, technology-enhanced learning, student experience",Software Engineering education,
,,,
,,,
Detecting security vulnerabilities with vulnerability nets,"security, vulnerabilities, software development, static analysis, manual audits","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
Detecting semantic conflicts with unit tests,"software, programming, merge, conflict, tests","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
,,,
,,,
,,,
Do code reviews lead to fewer code smells?,"Software quality, Code smells, Maintainability, Code reviews, Process quality",Metrics and evaluation of software development resources,Methods and tools for empirical software engineering research
,,,
,,,
Eclipse Open SmartCLIDE: An end-to-end framework for facilitating service reuse in cloud development,"SOA, Cloud Development, Service Reuse, API, Enterprise Systems",Approaches for cloud/fog/edge computing and virtualized systems,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
Edge to Cloud Tools: A Multivocal Literature Review,"edge computing, cloud resources, orchestration, offloading, computational tasks",Approaches for cloud/fog/edge computing and virtualized systems,
,,,
,,,
,,,
,,,
,,,
Emerging technologies in higher education assessment and feedback practices: A systematic literature review,"Artificial Intelligence, Learning Analytics, Extended Reality, higher education, computing education",Software Engineering education,"Artificial Intelligence, data analytics and big data applied in software engineering"
,,,
,,,
End-to-end log statement generation at block-level,"Software Development, Log Generation, Runtime Issues, Evaluation, Machine Learning","Artificial Intelligence, data analytics and big data applied in software engineering",Methods and tools for empirical software engineering research
,,,
,,,
,,,
,,,
,,,
Enhancing understanding and addressing gender bias in IT/SE job advertisements,"Gender bias, IT/SE, Job advertisements, Inclusiveness, Hiring practices",Ethical/societal aspects of Software Engineering,
,,,
,,,
ETune: Efficient configuration tuning for big-data software systems via configuration space reduction,"Configuration tuning, Bayesian optimization, Configuration space reduction, Big-data systems, Transfer learning","Artificial Intelligence, data analytics and big data applied in software engineering",Methods and tools for empirical software engineering research
,,,
,,,
,,,
Examining the effect of software professionalsâ€™ personality & additional capabilities on agile teamsâ€™ climate,Agile Team Climate; Personality Traits; Capability Measures; Organizational Performance; Correlation Analysis,Human factors and management concerns of software development,
,,,
Experimental evaluation of architectural software performance design patterns in microservices,Microservices; Design Patterns; System Performance; Resource Utilization; Cloud Infrastructure,"Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
Exploring the relation between personality traits and agile team climate: Aggregating results from a twice replicated study in a telecom company,Personality Traits; Agile Teams; Team Climate; Regression Analysis; Meta-Analysis,Human factors and management concerns of software development,
,,,
Exploring the trade-off between computational power and energy efficiency,Quantum Computing; Energy Efficiency; Computational Complexity; Empirical Studies; Classical Computing,Software Engineering for Sustainability,Methods and tools for empirical software engineering research
,,,
,,,
,,,
,,,
Feature causality,Software Defects; Feature Causality; Counterfactual Reasoning; Causal Impact Estimation; Feature Interactions,"Artificial Intelligence, data analytics and big data applied in software engineering",Methods and tools for empirical software engineering research
,,,
,,,
,,,
Feature-oriented test case selection and prioritization during the evolution of highly-configurable systems,Test Case Selection; Software Evolution; Highly Configurable Systems; Feature-based Testing; Test Case Prioritization,"Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
Few-shot code translation via task-adapted prompt learning,Pre-trained Models; Code Translation; Few-shot Learning; Parameter-efficient Tuning; Software Engineering,"Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
,,,
Flexible control flow graph alignment for delivering data-driven feedback to novice programming learners,Introductory Programming; Automated Feedback Systems; Control Flow Graph Alignment; Data-Driven Learning Support; Program Repair Algorithms,Software Engineering education,
,,,
,,,
FragQC: An efficient quantum error reduction technique using quantum circuit fragmentation,Quantum Computing; Quantum Circuit Fragmentation; Error Reduction Techniques; Graph Partitioning; Quantum Hardware,"Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
GBSR: Graph-based suspiciousness refinement for improving fault localization,Fault Localization; Software Debugging; Graph-based Algorithms; Mutation Analysis; Fault Suspiciousness Ranking,"Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
,,,
GDPR compliance via software evolution: Weaving security controls in software design,GDPR Compliance; Software Design; Privacy Controls; Security Controls; Software Evolution,"Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
GPTSniffer: A CodeBERT-based classifier to detect source code written by ChatGPT,AI-Generated Code Detection; Software Engineering Education; Plagiarism Detection; AI Code Classification; Quality Assurance in AI-generated Code,Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
,,,
"GraalSP: Polyglot, efficient, and robust machine learning-based static profiler",Static Profiling; Machine Learning; Compiler Optimization; Polyglot Programming; Program Performance,"Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
Harmonizing DevOps taxonomies â€” A grounded theory study,DevOps Adoption; Organizational Structure; Grounded Theory; Team Dynamics; Software Development Practices,"DevOps, continuous integration, build and test automation",
,,,
,,,
,,,
,,,
,,,
,,,
Hierarchical features extraction and data reorganization for code search,Code Search; Transformer Models; Deep Learning; Contrastive Training; Semantic Representation,"Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
Hybrid quantum architecture for smart city security,Smart City Security; Quantum Computing; AI-driven Threat Detection; IoT Vulnerabilities; Data Privacy,Approaches for cloud/fog/edge computing and virtualized systems,
,,,
,,,
,,,
,,,
Impermanent identifiers: Enhanced source code comprehension and refactoring,Software Comprehension; Code Augmentation; Dynamic Identifiers; Empirical Software Engineering; Developer Collaboration,Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
,,,
Incivility detection in open source code review and issue discussions,Open Source Development; Code Review; Issue Discussions; Machine Learning for Incivility Detection; Cross-platform Analysis,Methods and tools for empirical software engineering research,
,,,
,,,
Incremental-concurrent fusion checking for efficient context consistency,Context-Aware Computing; Smart Applications; Constraint Checking; Environmental Dynamics; Context Consistency,"Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
Investigating effectiveness and compliance to DevOps policies and practices for managing productivity and quality variability,DevOps; Productivity; Quality Management; Software Maintenance; Process Improvement,"DevOps, continuous integration, build and test automation",
,,,
,,,
Investigating the robustness of locators in template-based Web application testing using a GUI change classification model,GUI Testing; Web Application Testing; Test Case Robustness; Locator Breakage; Regression Testing,"Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution",
,,,
,,,
Iterative framework based on multi-task learning for service recommendation,Service-Oriented Computing; Multi-Task Learning; Service Recommendation; Software Development; User Requirements,Approaches for cloud/fog/edge computing and virtualized systems,
,,,
,,,
,,,
,,,
JITGNN: A deep graph neural network framework for Just-In-Time bug prediction,Just-In-Time Bug Prediction; Graph Neural Networks; Software Change Metrics; Deep Learning for Software Prediction; Source Code Analysis,"Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
Local features: Enhancing variability modeling in software product lines,Software Product Lines; Variability Modeling; Feature Models; Domain-Specific Languages; Product Customization,"Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
Log statements generation via deep learning: Widening the support provided to developers,Logging; Deep Learning in Software Engineering; Information Retrieval; Software Monitoring; Log Statement Injection,"Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
L OP-ART: A linear-time adaptive random testing algorithm for object-oriented programs,Object-Oriented Programming; Software Testing; Adaptive Random Testing; Fault Detection; Computational Efficiency,"Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
,,,
Monitoring tools for DevOps and microservices: A systematic grey literature review,DevOps Practices; Microservice Architecture; System Monitoring; Grey Literature Review; Software Quality,"DevOps, continuous integration, build and test automation",
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
Multi-granularity coverage criteria for deep reinforcement learning systems,"Reinforcement Learning, Deep Learning, Coverage, Safety, Security","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution",
,,,
,,,
On the effectiveness of developer features in code smell prioritization: A replication study,"code smells, prioritization, developer features, feature selection, model explanation",Metrics and evaluation of software development resources,
,,,
,,,
,,,
,,,
,,,
"Programming under the influence: On the effect of Heat, Noise, and Alcohol on novice programmers","Cognitive performance, Environmental stressors, Programming tasks, Noise effects, Alcohol effects",Human factors and management concerns of software development,
,,,
,,,
Property probes: Live exploration of program analysis results,"program analysis, debugging, dataflow analysis, compilers, interactive development","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
Query-oriented two-stage attention-based model for code search,"code search, deep learning, code representation, attention-based models, semantic gap","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
ReenRepair: Automatic and semantic equivalent repair of reentrancy in smart contracts,"Reentrancy, Smart contracts, Vulnerability, Gas optimization, Semantic equivalence","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
,,,
,,,
"Reproducibility of issues reported in stack overflow questions: Challenges, impact & estimation","reproducibility, Stack Overflow, code snippets, machine learning, reproducibility challenges",Methods and tools for empirical software engineering research,
,,,
Research artifacts for human-oriented experiments in software engineering: An ACM badges-driven structure proposal,"Open Science, Empirical Software Engineering, Human-Oriented Experiments, ACM Badging Policy, Reproducibility",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
,,,
RRGcode: Deep hierarchical search-based code generation,"Code generation, search models, re-ranking, retrieval models, semantic comparison","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
Runtime verification on abstract finite state models,"Finite-state models, Java, multithreading, runtime verification, temporal logic","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
Semantic interoperability for an AI-based applications platform for smart hospitals using HL7 FHIR,"Healthcare, AI, Machine Learning, Semantic Interoperability, Healthcare Digitization",Software Engineering for AI systems,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
ServiceAnomaly: An anomaly detection approach in microservices using distributed traces and profiling metrics,"anomaly detection, microservices, distributed traces, profiling metrics, graph analysis","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
Set evolution based test data generation for killing stubborn mutants,"mutation testing, fault-based testing, stubborn mutants, test data generation, set evolution","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
Supporting meta-model-based language evolution and rapid prototyping with automated grammar transformation,"Model-driven engineering, DSLs, meta-model, grammar transformation, language evolution","Agile, model-driven, service-oriented, open source and global software development",
,,,
,,,
,,,
,,,
"SynthoMinds: Bridging human programming intuition with retrieval, analogy, and reasoning in program synthesis","Program synthesis, Memory augmentation, Retrieval module, Analogy module, Reasoning module","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
"Technical debt in AI-enabled systems: On the prevalence, severity, impact, and management strategies for code and architecture","AI, Technical Debt, Architecture, Code Quality, Software Engineering",Business and economic aspects of software development processes,
,,,
,,,
,,,
,,,
,,,
,,,
Test case information extraction from requirements specifications using NLP-based unified boilerplate approach,"NLP, Test case generation, Requirements, Software testing, Automation","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
,,,
,,,
Test data generation for covering mutation-based path using MGA for MPI program,"MPI, Mutation Testing, Genetic Algorithm, Test Data Generation, Software Testing","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
,,,
The effects of required security on software development effort,"Security, Software Development, Cost Models, Secure Software, Information Systems",Business and economic aspects of software development processes,
,,,
,,,
The impact of hard and easy negative training data on vulnerability prediction performance,"Vulnerability Prediction, Machine Learning, Deep Learning, Negative Sampling, Model Performance","Artificial Intelligence, data analytics and big data applied in software engineering",
,,,
,,,
,,,
The never-ending storyâ€“How companies transition to and sustain continuous software engineering practices,"Continuous Software Engineering, Empirical Methods, Qualitative Research, Thematic Analysis, Infrastructuring",Methods and tools for empirical software engineering research,
,,,
The slow and the furious? Performance antipattern detection in Cyberâ€“Physical Systems,"Cyberâ€“Physical Systems, Performance, Antipatterns, Static Analysis, Software Performance","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
Thriving in the era of hybrid work: Raising cybersecurity awareness using serious games in industry trainings,"Cybersecurity, Hybrid work, Serious games, Secure software, Cloud security",Human factors and management concerns of software development,
,,,
,,,
,,,
Towards a common data-driven culture: A longitudinal study of the tensions and emerging solutions involved in becoming data-driven in a large public sector organization,"data-driven, public sector, sociotechnical, organizational culture, innovation",Business and economic aspects of software development processes,
,,,
,,,
Uncovering gender gap in academia: A comprehensive analysis within the software engineering community,"Gender gap, co-authorship, academic promotions, homophily, SE community",Ethical/societal aspects of Software Engineering,
,,,
,,,
,,,
,,,
Understanding participation and corporatization in service of diversity in free/libre and open source software development projects,"software development, FLOSS, corporate engagement, diversity, GitHub",Ethical/societal aspects of Software Engineering,
,,,
Understanding Virtual Onboarding Dynamics and Developer Turnover Intention in the Era of Pandemic,"Onboarding, Turnover, Virtual Work, Retention, Pandemic",Human factors and management concerns of software development,
,,,
,,,
Unlocking inclusive education: A quality assessment of software design in applications for children with autism,"Assistive technologies, software engineering, autism, inclusive education, user-centered design",Human factors and management concerns of software development,
,,,
,,,
Variability debt in opportunistic reuse: A multi-project field study,"Technical debt, Variability management, Opportunistic reuse, Clone-and-own reuse, Software variants",Business and economic aspects of software development processes,
,,,
,,,
,,,
,,,
Variability management and software product line knowledge in software companies,"software product line engineering, variability management, reuse practices, software development companies, empirical study",Methods and tools for empirical software engineering research,
,,,
,,,
,,,
,,,
"Variability modeling of products, processes, and resources in cyberâ€“physical production systems engineering","Cyber-Physical Production Systems, Process Automation, Control Systems, Product Variability, Resource Configuration","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
,,,
,,,
,,,
,,,
Visualization of object-oriented software in a city metaphor: Comprehending the implemented variability and its technical debt,"Software visualization, Object-oriented systems, Technical debt, Variability management, OO mechanisms","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",
,,,
,,,
Vulnerability detection techniques for smart contracts: A systematic literature review,"Music industry, Finance, Retail, Smart contracts, Vulnerability detection",Methods and tools for empirical software engineering research,
,,,
,,,
What is discussed about Flutter on Stack Overflow (SO) question-and-answer (Q&A) website: An empirical study,"Mobile Development, Cross-platform, Flutter, Stack Overflow, Software Engineering",Methods and tools for empirical software engineering research,
,,,
White-box validation of quantitative product lines by statistical model checking and process mining,"Software Product Line, Statistical Model Checking, Process Mining, Software Validation, Feature-oriented Languages","Methods and tools for software requirements, design, architecture, verification and validation, testing, maintenance and evolution, testing, maintenance and evolution",